// Mocks generated by Mockito 5.4.4 from annotations
// in flutter_learn/test/mocks/domain/pokemon_detail_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:flutter_learn/data/api/schema/pokemon.dart' as _i2;
import 'package:flutter_learn/domain/pokemon_detail.dart' as _i4;
import 'package:flutter_learn/model/pokemon_detail.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePokemonSchema_0 extends _i1.SmartFake implements _i2.PokemonSchema {
  _FakePokemonSchema_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakePokemonDetail_1 extends _i1.SmartFake implements _i3.PokemonDetail {
  _FakePokemonDetail_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [PokemonDetailUseCase].
///
/// See the documentation for Mockito's code generation for more information.
class MockPokemonDetailUseCase extends _i1.Mock
    implements _i4.PokemonDetailUseCase {
  MockPokemonDetailUseCase() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.PokemonSchema get pokemonSchema => (super.noSuchMethod(
        Invocation.getter(#pokemonSchema),
        returnValue: _FakePokemonSchema_0(
          this,
          Invocation.getter(#pokemonSchema),
        ),
      ) as _i2.PokemonSchema);

  @override
  _i5.Future<_i3.PokemonDetail> call(_i4.PokemonDetailUseCaseParam? param) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [param],
        ),
        returnValue: _i5.Future<_i3.PokemonDetail>.value(_FakePokemonDetail_1(
          this,
          Invocation.method(
            #call,
            [param],
          ),
        )),
      ) as _i5.Future<_i3.PokemonDetail>);
}
